input {
 pipeline { address => jira_changes }
}

filter {
 
 split {
  field => "[issues][changelog][histories]"
 }

 split {
  field => "[issues][changelog][histories][items]"
}

 mutate {
  rename => {
   "[issues][key]" => "key"
   "[issues][fields][project][key]" => "project"
   "[issues][changelog][histories][id]" => "change_id"
   "[issues][changelog][histories][author]" => "author"
   "[issues][changelog][histories][created]" => "created"
   "[issues][changelog][histories][items][from]" => "from"
   "[issues][changelog][histories][items][fromString]" => "fromStr"
   "[issues][changelog][histories][items][to]" => "to"
   "[issues][changelog][histories][items][toString]" => "toStr"
   "[issues][changelog][histories][items][field]" => "field"
   "[issues][changelog][histories][items][fieldtype]" => "fieldtype"
  }
  remove_field => [ "[issues]" ]
 }
}

output {
    elasticsearch{
        index => "jira_changelog_%{[project]}"
        hosts => ["elasticsearch"]
        document_id => "%{[key]}_%{[change_id]}"
        action => "create"
    }
}
