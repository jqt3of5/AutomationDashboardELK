input {
 pipeline { address => jira_changes }
}

filter {

 ruby {
    path => "/usr/share/logstash/pipeline/time_in_status.rb"
 }

 mutate {
  rename => {
   "[issues][key]" => "key"
   "[issues][fields][project][key]" => "project"
   "[issues][changelog][histories][id]" => "change_id"
   "[issues][changelog][histories][author]" => "author"
   "[issues][changelog][histories][created]" => "created"
   "[issues][changelog][histories][nextTransition]" => "nextTransition"
   "[issues][changelog][histories][timeInStatus]" => "timeInStatus"
   "[issues][changelog][histories][items][from]" => "from"
   "[issues][changelog][histories][items][to]" => "to"
   "[issues][changelog][histories][items][field]" => "field"
   "[issues][changelog][histories][items][fieldtype]" => "fieldtype"
   "[issues][changelog][histories][items][toString]" => "toStr"
    "[issues][changelog][histories][items][fromString]" => "fromStr"
  }

  lowercase => ["project"]
 }
 if [field] == "status" {
     mutate {
        rename => {
            "[toStr]" => "status"
            "[fromStr]" => "previousStatus"
          }
      }
 }
 mutate {
    remove_field => [ "[issues]" ]
 }
}

output {
    #file { path => "/Users/i52884/ELK/AutomationDashboard/logstash/config/jira_changelog.json" }
    elasticsearch{
        index => "jira_changelog_%{[project]}"
        hosts => ["elasticsearch"]
        document_id => "%{[key]}_%{[change_id]}_%{[field]}"
        action => "create"
    }
}
