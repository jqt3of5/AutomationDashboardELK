input {
    jira_poller {
        baseurl => {
            method => get
            user => "${JIRA_USER}"
            password => "${JIRA_PWD}"
            url => "https://epm.verisk.com/jira"
            headers => {
                Accept => "application/json"
            }
        }
        projects => ["XMA", "XMI", "XMW", "XO"]
        jql => "updated > startOfYear() and issuetype != Test"
        schedule => { every => "60s"}
        codec => "json"
    }
}

filter {

    if [issues] {
        split {
            field => "[issues]"
        }

        #time_in_status {

        #}
        #ruby {
        #    path => "/home/jqt3of5/AutomationDashboard/logstash/pipeline/story_points.rb"
        #}

        foreach {
            task_id => "%{[issues][key]}"
            array_field => "[issues][transitions]"
            join_fields => "[issues][transitions]"
        }

        http {
            url => "https://epm.verisk.com/jira/rest/api/2/status/%{[issues][transitions][status_id]}"
            user => "${JIRA_USER}"
            password => "${JIRA_PWD}"
            body => "[issues][transitions][status]"
        }

        http {
            url => "https://epm.verisk.com/jira/rest/api/2/status/%{[issues][transitions][previous_status_id]}"
            user => "${JIRA_USER}"
            password => "${JIRA_PWD}"
            body => "[issues][transitions][previous_status]"
        }

        foreach {
            task_id => "%{[issues][key]}"
            end => true
        }

        mutate {
            rename => {
                "[issues][id]" => "id"
                "[issues][key]" => "key"
                "[issues][fields][project][key]" => "project"
                "[issues]" => "issue"
               }

            lowercase => ["project"]
        }
     }
}


output {
    if [issues] {
        file { path => "jira_issues_%{[issues][fields][project][key]}.json" }
        #pipeline { send_to => [jira_transitions] }
        #elasticsearch{
        #    index => "jira_issues_%{[project]}"
        #    hosts => ["elasticsearch:9200"]
        #    document_id => "%{[key]}"
        #    doc_as_upsert => true
        #    action => update
        #}
    } else {
        file { path => "jira_errors.json" }
        #elasticsearch{
        #    index => "jira_polling_errors"
        #    hosts => ["elasticsearch:9200"]
        #}

    }
}